quadFun <- function (a, b, c){
if (a == 0){
stop("a must be non-zero.")
}
dis <- b^2 - 4*a*c
if (dis > 0){
x1 <- (- b + sqrt(dis) )/(2*a)
x2 <- (- b - sqrt(dis))/(2*a)
print (paste('There are two solutions: x1 = ', x1, ', x2 = ', x2, '.', sep=""))
} else if (dis == 0){
x <- (- b)/(2*a)
print (paste('There is one solution: x = ', x, '.', sep=""))
} else {
x1.complex <- (- b + sqrt(as.complex(dis)))/(2*a)
x2.complex <- (- b - sqrt(as.complex(dis)))/(2*a)
print (paste('There are two complex solutions: x1 = ', x1.complex, ', x2 = ', x2.complex, '.', sep=""))
}
}
quadFun(1, -1, -2) # "There are two solutions: x1 = 2, x2 = -1."
quadFun(0, 1, 2) # raise an error, 'Error in quadFun(0, 1, 2) : a must be non-zero.'
quadFun(1, 2, 1)   # "There is one solution: x = -1."
quadFun(1, 2, 4)   "There are two complex solutions: x1 = -1+1.73205080756888i, x2 = -1-1.73205080756888i."
quadFun(1, 2, 4)  # "There are two complex solutions: x1 = -1+1.73205080756888i, x2 = -1-1.73205080756888i."
